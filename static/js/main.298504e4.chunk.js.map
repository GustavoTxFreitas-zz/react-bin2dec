{"version":3,"sources":["components/text/index.js","components/input/index.js","components/display/index.js","components/appContainer/index.js","components/glassContainer/index.js","App.js","index.js"],"names":["Text","params","className","children","Input","for","id","label","autoFocus","type","onChange","onchange","placeholder","Display","bin","dec","AppContainer","GlassContainer","conversion","value","counter","trim","digits","parseInt","toString","App","useState","inputValue","setInputValue","displayValue","setDisplayValue","e","target","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gVAUeA,MARf,SAAcC,GACV,OACI,qBAAKC,UAAU,gBAAf,SACI,oBAAIA,UAAW,QAAUD,EAAOC,UAAhC,SAA4CD,EAAOE,c,MCehDC,MAlBf,SAAeH,GACX,OACI,sBAAKC,UAAU,iBAAf,UACI,uBAAOG,IAAKJ,EAAOK,GAAIJ,UAAU,aAAjC,SACI,gCAAQD,EAAOM,OAAS,YAE5B,uBACIC,WAAS,EACTC,KAAK,OACLH,GAAIL,EAAOK,GACXJ,UAAU,QACVQ,SAAUT,EAAOU,SACjBC,YAAaX,EAAOW,aAAe,oB,MCapCC,MAzBf,SAAiBZ,GACb,OACI,qBAAKC,UAAU,mBAAf,SACKD,EAAOa,IACJ,qCACI,sBAAKZ,UAAU,cAAf,UACKD,EAAOa,IACR,8BACI,6CAGR,sBAAKZ,UAAU,eAAf,UACKD,EAAOc,IACR,8BACI,iDAIZ,mCACI,qBAAKb,UAAU,eAAf,wB,MCTLc,MAVf,SAAsBf,GAClB,OACI,0BAASC,UAAU,eAAnB,UACI,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACdD,EAAOE,a,MCGLc,MARf,SAAwBhB,GACpB,OACI,yBAASC,UAAU,iBAAnB,SACKD,EAAOE,YC+BpB,IAAMe,EAAa,SAACC,GAClB,IAD4B,EACxBC,EAAU,EAAGN,EAAMK,EAAME,OADD,cAGTP,GAHS,IAG5B,2BAAwB,CAAC,IAAhBQ,EAAe,QACtB,GAAe,MAAXA,GAA6B,MAAXA,EACpB,MAAO,aAEPF,EAAoB,EAAVA,EAAcG,SAASD,IAPT,8BAU5B,OAAOF,EAAQI,YAGFC,EAxCf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OAE2BF,mBAAS,IAFpC,mBAENG,EAFM,KAEQC,EAFR,KAIb,OACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,eAAC,EAAD,CAAM5B,UAAU,SAAhB,8BAA0C,uBAA1C,eAEA,cAAC,EAAD,CAASY,IAAKa,EAAYZ,IAAKc,IAE/B,cAAC,EAAD,CACEvB,GAAG,eACHC,MAAM,wBACNK,YAAY,mBACZD,SAAU,SAAAoB,GACRH,EAAcG,EAAEC,OAAOb,OACvBW,EAAgBZ,EAAWa,EAAEC,OAAOb,WAGxC,eAAC,EAAD,CAAMjB,UAAU,SAAhB,yCAAqD,mBAAG+B,KAAK,sCAAR,uCCvB7DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.298504e4.chunk.js","sourcesContent":["import './index.css';\n\nfunction Text(params) {\n    return(\n        <div className=\"TextContainer\">\n            <h1 className={\"Text \" + params.className}>{params.children}</h1>\n        </div>\n    )\n}\n\nexport default Text;\n","import './index.css'\n\nfunction Input(params) {\n    return (\n        <div className=\"InputContainer\">\n            <label for={params.id} className=\"InputLabel\">\n                <small>{params.label || 'label'}</small>\n            </label>\n            <input\n                autoFocus\n                type=\"text\"\n                id={params.id}\n                className=\"Input\"\n                onChange={params.onchange}\n                placeholder={params.placeholder || 'placeholder'} />\n\n        </div>\n    )\n}\n\nexport default Input;\n","import './index.css';\n\nfunction Display(params) {\n    return (\n        <div className=\"DisplayContainer\">\n            {params.bin ?\n                <>\n                    <div className=\"BinaryValue\">\n                        {params.bin}\n                        <sub>\n                            <small>(2)</small>\n                        </sub>\n                    </div>\n                    <div className=\"DecimalValue\">\n                        {params.dec}\n                        <sub>\n                            <small>(10)</small>\n                        </sub>\n                    </div></>\n                :\n                <>\n                    <div className=\"DecimalValue\">- - -</div>\n                </>}\n        </div>\n    )\n}\n\nexport default Display;\n","import './index.css';\n\nfunction AppContainer(params) {\n    return (\n        <section className=\"AppContainer\">\n            <div className=\"color\"></div>\n            <div className=\"color\"></div>\n            {params.children}\n        </section>\n    )\n}\n\nexport default AppContainer;\n","import './index.css';\n\nfunction GlassContainer(params) {\n    return (\n        <section className=\"GlassContainer\">\n            {params.children}\n        </section>\n    )\n}\n\nexport default GlassContainer;\n","import { useState } from 'react';\n\nimport './App.css';\nimport Text from './components/text';\nimport Input from './components/input';\nimport Display from './components/display';\nimport AppContainer from './components/appContainer';\nimport GlassContainer from './components/glassContainer';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [displayValue, setDisplayValue] = useState('');\n\n  return (\n    <AppContainer>\n      <GlassContainer>\n        <Text className='header'>binary to decimal<br></br>converter</Text>\n\n        <Display bin={inputValue} dec={displayValue}></Display>\n\n        <Input\n          id='binary-input'\n          label='Enter a binary number'\n          placeholder='ex.: 11111100101'\n          onchange={e => {\n            setInputValue(e.target.value);\n            setDisplayValue(conversion(e.target.value));\n          }} />\n\n        <Text className='footer'>Powered by&ensp;&bull;&ensp;<a href='https://github.com/GustavoTxFreitas'>Gustavo Teixeira</a></Text>\n      </GlassContainer>\n    </AppContainer>\n\n  );\n}\n\nconst conversion = (value) => {\n  let counter = 0, bin = value.trim();\n\n  for (let digits of bin) {\n    if (digits !== '0' && digits !== '1')\n      return 'non-binary';\n    else\n      counter = counter * 2 + parseInt(digits);\n  }\n\n  return counter.toString();\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}